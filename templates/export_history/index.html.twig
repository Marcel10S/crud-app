{% extends "base.html.twig" %}

{% block body %}
<div class="exports-history-container" id="exports-history-container">
    <div class="row">
        <div class="col-4" id="exports-history-filters">
            <div class="form-group">
                <input type="text" class="form-control" id="export_place" placeholder="{{filters.export_place}}">
                <input type="text" class="form-control" id="date_from" name="date_from" placeholder="{{filters.date_from}}">
                <input type="text" class="form-control" id="date_to" name="date_to" placeholder="{{filters.date_to}}">
                <button class="btn btn-info mt-2 text-white" id="submit_filters">Zatwierdź</button>
            </div>
        </div>
        <div class="col-8" id="exports-history-data">
            <table class="table table-striped" id="weather_list">
                <thead>
                    <tr>
                        <th scope="col">Nazwa</th>
                        <th scope="col">Data</th>
                        <th scope="col">Godzina</th>
                        <th scope="col">Użytkownik</th>
                        <th scope="col">Lokal</th>
                    </tr>
                </thead>
                <tbody>
                    {% for export in exportsHistory %}
                        <tr>
                            <td>{{ export.display_name }}</td>
                            <td>{{ export.display_export_date }}</td>
                            <td>{{ export.display_export_time }}</td>
                            <td>{{ export.display_assigned_person }}</td>
                            <td>{{ export.display_export_place }}</td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    //TODO - Czyli co bym zaproponował dodania w większym wymiarze czasu 
    // 1 Przeniesienie rozwiązań do osobnego pliku JS
    // 2 Przeniesienie metod do klasy i załadowanie jej do pamięci cache

    $(document).ready(function(){
        retriveDatePickers();
        $("#submit_filters").click(() => {
            if (areDatesValid()) {
                reloadExportsHistory(getFiltersData())
            }
        })
    })

    function reloadExportsHistory (filter_data) {
        $.ajax({
            type: "POST",
            url: "{{ path('app_export_history') }}",
            data: JSON.stringify(filter_data),
            dataType: 'json',
            success: (response) => {
                if (response.view) {
                    $("body").html(response.view);
                    retriveDatePickers();
                } else if (response.error_msg) {
                     alert(response.error_msg)
                }
            },
        })
    }

    function getFiltersData () {
        let export_place = $("#export_place").val();
        let date_from = $("#date_from").val();
        let date_to = $("#date_to").val();

        return {
            export_place: export_place,
            date_from: date_from,
            date_to: date_to,
        }
    }

    function areDatesValid () {
        let date_from = $("#date_from").val();
        let date_to = $("#date_to").val();
        if (
            date_from === "" || date_from === undefined 
            || date_to === "" || date_to === undefined
        ) {
            return true;
        } 
        return date_to > date_from;
    }

    function retriveDatePickers () {
        let date_input;
        let container;
        let options;

        date_input=$('input[name="date_from"]'); 
        container=$('.bootstrap-iso form').length>0 ? $('.bootstrap-iso form').parent() : "body";
        options={
            format: 'yyyy-mm-dd',
            container: container,
            todayHighlight: true,
            autoclose: true,
        };
        date_input.datepicker(options);

        date_input=$('input[name="date_to"]'); //our date input has the name "date"
        container=$('.bootstrap-iso form').length>0 ? $('.bootstrap-iso form').parent() : "body";
        options={
            format: 'yyyy-mm-dd',
            container: container,
            todayHighlight: true,
            autoclose: true,
        };
        date_input.datepicker(options);
    }

</script>
<script>
    $(document).ready(function(){

    })
</script>
<script>
    $(document).ready(function(){

    })
</script>

{% endblock %}